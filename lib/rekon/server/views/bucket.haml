%h1 Bucket &ndash; <em>http://#{@node.name}/riak/#{@bucket.name}</em>

- unless @keys.blank?
  - @keys.sort!
  %table 
    %thead
      %tr
        %th
        %th View
        %th Riak
        %th Edit
        %th Delete
    %tbody
      - @keys.each do |key|
        %tr
          %th
            <em>http://#{@node.name}/riak/#{@bucket.name}/</em>#{key}
          %td
            = view_in_rekon("/nodes/#{@node.name}/#{@bucket.name}/#{key}")
          %td
            = view_in_riak("http://#{@node.name}/riak/#{@bucket.name}/#{key}")
          %td
            = edit_in_rekon("/nodes/#{@node.name}/#{@bucket.name}/#{key}/edit")
          %td
            = destroy_in_rekon("/nodes/#{@node.name}/#{@bucket.name}/#{key}")
  
- else
  %p
    This bucket doesn't technically exist.  Buckets come into existence only
    once they have had a key stored "inside" them.
  %p
    Add a key to persist this bucket.
  

%form{:method => 'post', :action => "/nodes/#{@host}/#{@bucket.name}"}
  %label{:for => 'new_key'} New Key
  %input#new_key{:type => 'text', :name => 'key'}
  %button{:type => 'submit'} Add
  %em.hint Leave it blank to let riak pick

%br
%br

%p
  %b Pre Commit
  = @props[:precommit].blank? ? 'None' : @props[:precommit].to_sentence
%p
  %b Post Commit
  = @props[:postcommit].blank? ? 'None' : @props[:postcommit].to_sentence

#bucket-props
  %table
    %thead
      %tr
        %th{:colspan => 6}
        %th Last
        %th Allow
        %th{:colspan => 2} Linkfun
        %th{:colspan => 2} Chash Keyfun
        %th{:colspan => 4} VClock
      %tr
        %th Name
        %th W
        %th R
        %th RW
        %th DW
        %th N Val
        %th Write Wins
        %th Multi
        %th Mod
        %th Fun
        %th Mod
        %th Fun
        %th Small
        %th Big
        %th Young
        %th Old
    %tbody
      %tr
        %td= @props[:name]
        %td= @props[:w]
        %td= @props[:r]
        %td= @props[:rw]
        %td= @props[:dw]
        %td= @props[:n_val]
        %td= @props[:last_write_wins]
        %td= @props[:allow_mult]
        %td= @props[:linkfun][:mod]
        %td= @props[:linkfun][:fun]
        %td= @props[:chash_keyfun][:mod]
        %td= @props[:chash_keyfun][:fun]
        %td= @props[:small_vclock]
        %td= @props[:big_vclock]
        %td= @props[:young_vclock]
        %td= @props[:old_vclock]
      
%a{:href => "/nodes/#{@node.name}"} Back to #{@node.name}